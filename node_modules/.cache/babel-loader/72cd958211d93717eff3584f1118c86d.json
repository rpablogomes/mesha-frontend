{"ast":null,"code":"var _jsxFileName = \"/Users/riksonpablogomesdarocha/Git/mesha-frontend/src/components/users/UsersList.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport ReactPaginate from \"react-paginate\";\nimport data from \"../../Data\";\nwindow.React = React;\nexport class CommentList extends Component {\n  render() {\n    let commentNodes = this.props.data.map(function (comment, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }\n      }, comment.comment);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"project-comments\",\n      className: \"commentList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, commentNodes));\n  }\n\n}\nCommentList.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = data => {\n      let selected = data.selected;\n      let offset = Math.ceil(selected * this.props.perPage);\n      this.setState({\n        offset: offset\n      }, () => {\n        this.loadCommentsFromServer();\n      });\n    };\n\n    this.state = {\n      data: [],\n      offset: 0\n    };\n  }\n\n  loadCommentsFromServer() {\n    $.ajax({\n      url: this.props.url,\n      data: {\n        limit: this.props.perPage,\n        offset: this.state.offset\n      },\n      dataType: 'json',\n      type: 'GET',\n      success: data => {\n        this.setState({\n          data: data.comments,\n          pageCount: Math.ceil(data.meta.total_count / data.meta.limit)\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(this.props.url, status, err.toString()); // eslint-disable-line\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.loadCommentsFromServer();\n  }\n\n}\nApp.propTypes = {\n  url: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  perPage: PropTypes.number.isRequired\n};\n\nfunction UsersRegister() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CommentList, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReactPaginate, {\n    previousLabel: 'previous',\n    nextLabel: 'next',\n    breakLabel: '...',\n    breakClassName: 'break-me',\n    pageCount: this.state.pageCount,\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    onPageChange: this.handlePageClick,\n    containerClassName: 'pagination',\n    activeClassName: 'active',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default UsersRegister;","map":{"version":3,"sources":["/Users/riksonpablogomesdarocha/Git/mesha-frontend/src/components/users/UsersList.js"],"names":["React","Component","Header","Footer","ReactPaginate","data","window","CommentList","render","commentNodes","props","map","comment","index","propTypes","PropTypes","array","isRequired","App","constructor","handlePageClick","selected","offset","Math","ceil","perPage","setState","loadCommentsFromServer","state","$","ajax","url","limit","dataType","type","success","comments","pageCount","meta","total_count","error","xhr","status","err","console","toString","componentDidMount","string","author","number","UsersRegister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AAEAC,MAAM,CAACN,KAAP,GAAeA,KAAf;AAEA,OAAO,MAAMO,WAAN,SAA0BN,SAA1B,CAAoC;AAKzCO,EAAAA,MAAM,GAAG;AACP,QAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWL,IAAX,CAAgBM,GAAhB,CAAoB,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AAC/D,0BAAO;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBD,OAAO,CAACA,OAA1B,CAAP;AACD,KAFkB,CAAnB;AAIA,wBACE;AAAK,MAAA,EAAE,EAAC,kBAAR;AAA2B,MAAA,SAAS,EAAC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,YAAL,CADF,CADF;AAKD;;AAfwC;AAA9BF,W,CACJO,S,GAAY;AACjBT,EAAAA,IAAI,EAAEU,SAAS,CAACC,KAAV,CAAgBC;AADL,C;AAiBrB,OAAO,MAAMC,GAAN,SAAkBjB,SAAlB,CAA4B;AAOjCkB,EAAAA,WAAW,CAACT,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiCnBU,eAjCmB,GAiCAf,IAAD,IAAU;AAC1B,UAAIgB,QAAQ,GAAGhB,IAAI,CAACgB,QAApB;AACA,UAAIC,MAAM,GAAGC,IAAI,CAACC,IAAL,CAAUH,QAAQ,GAAG,KAAKX,KAAL,CAAWe,OAAhC,CAAb;AAEA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEA;AAAV,OAAd,EAAkC,MAAM;AACtC,aAAKK,sBAAL;AACD,OAFD;AAGD,KAxCkB;;AAGjB,SAAKC,KAAL,GAAa;AACXvB,MAAAA,IAAI,EAAE,EADK;AAEXiB,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDK,EAAAA,sBAAsB,GAAG;AACvBE,IAAAA,CAAC,CAACC,IAAF,CAAO;AACLC,MAAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWqB,GADX;AAEL1B,MAAAA,IAAI,EAAE;AAAE2B,QAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWe,OAApB;AAA6BH,QAAAA,MAAM,EAAE,KAAKM,KAAL,CAAWN;AAAhD,OAFD;AAGLW,MAAAA,QAAQ,EAAE,MAHL;AAILC,MAAAA,IAAI,EAAE,KAJD;AAMLC,MAAAA,OAAO,EAAG9B,IAAD,IAAU;AACjB,aAAKqB,QAAL,CAAc;AACZrB,UAAAA,IAAI,EAAEA,IAAI,CAAC+B,QADC;AAEZC,UAAAA,SAAS,EAAEd,IAAI,CAACC,IAAL,CAAUnB,IAAI,CAACiC,IAAL,CAAUC,WAAV,GAAwBlC,IAAI,CAACiC,IAAL,CAAUN,KAA5C;AAFC,SAAd;AAID,OAXI;AAaLQ,MAAAA,KAAK,EAAE,CAACC,GAAD,EAAMC,MAAN,EAAcC,GAAd,KAAsB;AAC3BC,QAAAA,OAAO,CAACJ,KAAR,CAAc,KAAK9B,KAAL,CAAWqB,GAAzB,EAA8BW,MAA9B,EAAsCC,GAAG,CAACE,QAAJ,EAAtC,EAD2B,CAC4B;AACxD;AAfI,KAAP;AAiBD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,sBAAL;AACD;;AAtCgC;AAAtBT,G,CACJJ,S,GAAY;AACjBiB,EAAAA,GAAG,EAAEhB,SAAS,CAACgC,MAAV,CAAiB9B,UADL;AAEjB+B,EAAAA,MAAM,EAAEjC,SAAS,CAACgC,MAAV,CAAiB9B,UAFR;AAGjBQ,EAAAA,OAAO,EAAEV,SAAS,CAACkC,MAAV,CAAiBhC;AAHT,C;;AAiDrB,SAASiC,aAAT,GAAyB;AACvB,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE7C,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGI,oBAAC,aAAD;AACE,IAAA,aAAa,EAAE,UADjB;AAEE,IAAA,SAAS,EAAE,MAFb;AAGE,IAAA,UAAU,EAAE,KAHd;AAIE,IAAA,cAAc,EAAE,UAJlB;AAKE,IAAA,SAAS,EAAE,KAAKuB,KAAL,CAAWS,SALxB;AAME,IAAA,oBAAoB,EAAE,CANxB;AAOE,IAAA,kBAAkB,EAAE,CAPtB;AAQE,IAAA,YAAY,EAAE,KAAKjB,eARrB;AASE,IAAA,kBAAkB,EAAE,YATtB;AAUE,IAAA,eAAe,EAAE,QAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAeE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD;;AAED,eAAe8B,aAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n\nimport ReactPaginate from \"react-paginate\";\n\nimport data from \"../../Data\"\n\nwindow.React = React;\n\nexport class CommentList extends Component {\n  static propTypes = {\n    data: PropTypes.array.isRequired,\n  };\n\n  render() {\n    let commentNodes = this.props.data.map(function (comment, index) {\n      return <div key={index}>{comment.comment}</div>;\n    });\n\n    return (\n      <div id=\"project-comments\" className=\"commentList\">\n        <ul>{commentNodes}</ul>\n      </div>\n    );\n  }\n}\n\nexport class App extends Component {\n  static propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    perPage: PropTypes.number.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      offset: 0,\n    };\n  }\n\n  loadCommentsFromServer() {\n    $.ajax({\n      url: this.props.url,\n      data: { limit: this.props.perPage, offset: this.state.offset },\n      dataType: 'json',\n      type: 'GET',\n\n      success: (data) => {\n        this.setState({\n          data: data.comments,\n          pageCount: Math.ceil(data.meta.total_count / data.meta.limit),\n        });\n      },\n\n      error: (xhr, status, err) => {\n        console.error(this.props.url, status, err.toString()); // eslint-disable-line\n      },\n    });\n  }\n\n  componentDidMount() {\n    this.loadCommentsFromServer();\n  }\n\n  handlePageClick = (data) => {\n    let selected = data.selected;\n    let offset = Math.ceil(selected * this.props.perPage);\n\n    this.setState({ offset: offset }, () => {\n      this.loadCommentsFromServer();\n    });\n  };\n}\n\nfunction UsersRegister() {\n  return (\n    <>\n      <Header />\n      <CommentList data={data} />\n        <ReactPaginate\n          previousLabel={'previous'}\n          nextLabel={'next'}\n          breakLabel={'...'}\n          breakClassName={'break-me'}\n          pageCount={this.state.pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={this.handlePageClick}\n          containerClassName={'pagination'}\n          activeClassName={'active'}\n        />\n      <Footer />\n    </>\n  );\n}\n\nexport default UsersRegister;\n"]},"metadata":{},"sourceType":"module"}